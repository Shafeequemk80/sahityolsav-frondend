import React, { useState } from 'react';
import { categories, itemsByCategory, sectors } from './data';
import { postDataServer } from './context/apiCall';

function AdminSide() {
  const [category, setCategory] = useState('');
  const [items, setItems] = useState([]);
  const [formData, setFormData] = useState({
    firstName: '',
    firstSector: '',
    secondName: '',
    secondSector: '',
    thirdName: '',
    thirdSector: '',
  });

  const handleCategoryChange = (event) => {
    const cate = event.target.value;
    setCategory(cate);
    setItems(itemsByCategory[cate]);
  };

  const handleInputChange = (event) => {
    const { id, value } = event.target;
    setFormData((prevData) => ({
      ...prevData,
      [id]: value,
    }));
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    console.log('submit');
    const postDatas = {
      resultCount: 10,
      category,
      item: formData.item,
      firstPrice: formData.firstName,
      firstUnit: formData.firstSector,
      secPrice: formData.secondName,
      secUnit: formData.secondSector,
      thirdPrice: formData.thirdName,
      thirdUnit: formData.thirdSector,
    };
    try {
      const data = await postDataServer(postDatas);
      console.log(data);
    } catch (error) {
      console.error('Error posting data:', error);
    }
  };

  return (
    <div>
      <form
        onSubmit={handleSubmit}
        className="flex flex-col min-h-screen space-y-12 p-10 md:py-24 md:px-56"
      >
        <h2 className="text-3xl lg:text-4xl font-bold">Upload Results Here</h2>
        <div className="flex flex-col space-y-8">
          <div className="grid grid-cols-1 md:grid-cols-2 w-full gap-7 lg:gap-10">
            <div className="flex flex-col gap-2">
              <label htmlFor="category" className="text-lg font-medium">
                Category
              </label>
              <select
                onChange={handleCategoryChange}
                id="category"
                className="w-full h-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
              >
                <option value="">Select Category</option>
                {categories.map((cate) => (
                  <option key={cate} value={cate}>
                    {cate}
                  </option>
                ))}
              </select>
            </div>
            <div className="flex flex-col gap-2">
              <label htmlFor="item" className="text-lg font-medium">
                Item
              </label>
              <select
                id="item"
                className="w-full h-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                onChange={handleInputChange}
              >
                <option value="">Select Item</option>
                {items.map((item) => (
                  <option key={item} value={item}>
                    {item}
                  </option>
                ))}
              </select>
            </div>
          </div>
          <div className="grid grid-cols-1 grid-rows-3 gap-7 lg:gap-10">
            {/* first */}
            <div className="flex flex-col gap-2">
              <h1 className="text-lg font-semibold bg2 p-3 px-5 w-full rounded-t-3xl bg-opacity-50">
                First Price
              </h1>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-2 lg:gap-5">
                <div className="flex flex-col gap-2">
                  <label htmlFor="firstName" className="font-medium text-lg">
                    Name
                  </label>
                  <input
                    id="firstName"
                    className="w-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    type="text"
                    value={formData.firstName}
                    onChange={handleInputChange}
                  />
                </div>
                <div className="flex flex-col gap-2">
                  <label htmlFor="firstSector" className="font-medium text-lg">
                    Sector
                  </label>
                  <select
                    id="firstSector"
                    className="w-full h-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    value={formData.firstSector}
                    onChange={handleInputChange}
                  >
                    <option value="">Select Sector</option>
                    {sectors.map((sector) => (
                      <option key={sector} value={sector}>
                        {sector}
                      </option>
                    ))}
                  </select>
                </div>
              </div>
            </div>
            {/* second */}
            <div className="flex flex-col gap-2">
              <h1 className="text-lg font-semibold bg2 p-3 px-5 w-full rounded-t-3xl bg-opacity-50">
                Second Price
              </h1>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-2 lg:gap-5">
                <div className="flex flex-col gap-2">
                  <label htmlFor="secondName" className="font-medium text-lg">
                    Name
                  </label>
                  <input
                    id="secondName"
                    className="w-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    type="text"
                    value={formData.secondName}
                    onChange={handleInputChange}
                  />
                </div>
                <div className="flex flex-col gap-2">
                  <label htmlFor="secondSector" className="font-medium text-lg">
                    Sector
                  </label>
                  <select
                    id="secondSector"
                    className="w-full h-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    value={formData.secondSector}
                    onChange={handleInputChange}
                  >
                    <option value="">Select Sector</option>
                    {sectors.map((sector) => (
                      <option key={sector} value={sector}>
                        {sector}
                      </option>
                    ))}
                  </select>
                </div>
              </div>
            </div>
            {/* third */}
            <div className="flex flex-col gap-2">
              <h1 className="text-lg font-semibold bg2 p-3 px-5 w-full rounded-t-3xl bg-opacity-50">
                Third Price
              </h1>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-2 lg:gap-5">
                <div className="flex flex-col gap-2">
                  <label htmlFor="thirdName" className="font-medium text-lg">
                    Name
                  </label>
                  <input
                    id="thirdName"
                    className="w-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    type="text"
                    value={formData.thirdName}
                    onChange={handleInputChange}
                  />
                </div>
                <div className="flex flex-col gap-2">
                  <label htmlFor="thirdSector" className="font-medium text-lg">
                    Sector
                  </label>
                  <select
                    id="thirdSector"
                    className="w-full h-full p-2 border rounded bg-slate-50 hover:bg-slate-100"
                    value={formData.thirdSector}
                    onChange={handleInputChange}
                  >
                    <option value="">Select Sector</option>
                    {sectors.map((sector) => (
                      <option key={sector} value={sector}>
                        {sector}
                      </option>
                    ))}
                  </select>
                </div>
              </div>
            </div>
          </div>
        </div>
        <button
          type="submit"
          className="w-full p-3 px-12 text-xl font-semibold text-white rounded shadow-md bg-black hover:bg-gray-800"
        >
          Submit
        </button>
      </form>

      <footer className="px-5 md:px-10 lg:px-10 xl:px-36 w-full gap-5 sm:max-w-full bg-[#151622] flex flex-col items-center justify-center">
        <h1 className="text-white mt-8 font-semibold text-sm lg:text-base">Get connected</h1>
        <div className="flex items-center justify-center text-white gap-1">
          <a target="_blank" href="https://www.instagram.com/ssf_kunnamangalam" rel="noopener noreferrer">
            <span className="text-xl lg:text-3xl iconify" data-icon="mdi:instagram"></span>
          </a>
          <a target="_blank" href="https://www.instagram.com/ssf_kunnamangalam" rel="noopener noreferrer">
            <span className="text-xl lg:text-3xl iconify" data-icon="mdi:facebook"></span>
          </a>
          <a href="sahithyolsavkgm.vercel.app">
            <span className="text-xl lg:text-3xl iconify" data-icon="mdi:web"></span>
          </a>
          <a href="https://www.instagram.com/ssf_kunnamangalam">
            <span className="text-xl lg:text-3xl iconify" data-icon="mdi:youtube"></span>
          </a>
        </div>
        <h1 className="text-gray-100 mt-4 mb-2">
          <span className="text-xl">&copy;</span> - 2023
        </h1>
      </footer>
    </div>
  );
}

export default AdminSide;
